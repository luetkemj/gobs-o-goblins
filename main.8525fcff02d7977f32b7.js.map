{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/state/components.js","webpack:///./src/state/cache.js","webpack:///./node_modules/lodash/lodash.js","webpack:///../node_modules/camelcase/index.js","webpack:///../src/Properties/Property.js","webpack:///../src/Properties/SimpleProperty.js","webpack:///../src/Properties/EntityProperty.js","webpack:///../src/Properties/EntityArrayProperty.js","webpack:///../src/Properties/PropertyFactory.js","webpack:///../src/Component.js","webpack:///../src/registries/ComponentRegistry.js","webpack:///../node_modules/deepmerge/dist/cjs.js","webpack:///../src/PrefabComponent.js","webpack:///../src/Prefab.js","webpack:///../src/registries/PrefabRegistry.js","webpack:///../node_modules/nanoid/non-secure/index.js","webpack:///../src/EntityEvent.js","webpack:///../src/Entity.js","webpack:///../src/registries/EntityRegistry.js","webpack:///../src/Query.js","webpack:///../src/registries/QueryRegistry.js","webpack:///../src/Engine.js","webpack:///./node_modules/pathfinding/src/core/DiagonalMovement.js","webpack:///./node_modules/pathfinding/src/core/Util.js","webpack:///./node_modules/pathfinding/src/core/Heuristic.js","webpack:///./node_modules/heap/index.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack:///./node_modules/pathfinding/src/core/Node.js","webpack:///./node_modules/pathfinding/src/finders/AStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack:///./node_modules/pathfinding/index.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/pathfinding/src/PathFinding.js","webpack:///./node_modules/heap/lib/heap.js","webpack:///./node_modules/pathfinding/src/core/Grid.js","webpack:///./node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack:///./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack:///./src/lib/grid.js","webpack:///./src/lib/canvas.js","webpack:///./src/state/ecs.js","webpack:///./src/state/prefabs.js","webpack:///./src/lib/dungeon.js","webpack:///./src/lib/pathfinding.js","webpack:///./src/systems/ai.js","webpack:///./src/systems/animation.js","webpack:///./src/systems/effects.js","webpack:///./src/lib/fov.js","webpack:///./src/systems/fov.js","webpack:///./src/systems/movement.js","webpack:///./src/systems/render.js","webpack:///./src/systems/targeting.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","effectProps","component","delta","animate","char","color","events","addComponents","duration","ActiveEffects","Component","Ai","Animate","evt","this","startTime","data","time","Appearance","background","Defense","max","current","Description","Effects","Health","amount","entity","appearance","remove","add","handle","Inventory","list","push","position","x","id","IsBlocking","IsDead","IsInFov","IsOpaque","IsPickup","IsRevealed","Layer100","Layer300","Layer400","Move","y","z","relative","Paralyzed","Position","locId","addCacheSet","deleteCacheSet","Power","RequiresTarget","acquired","aoeRange","Target","TargetingItem","item","cache","entitiesAtLocation","floors","addCache","path","set","readCache","Set","has","readCacheSet","serializeCache","keys","reduce","acc","val","deserializeCache","clearCache","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","undefined","basePropertyOf","baseReduce","baseTimes","baseUnary","baseValues","props","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","string","test","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrValue","flatten","otherFunc","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","pascalCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","v","ecs","getEntity","console","Proxy","Reflect","old","deleteProperty","len","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","Boolean","ob","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","PropertyFactory","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","cloneUnlessOtherwiseSpecified","deepmerge","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","prev","overwrite","componentDef","initialProps","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","allowMultiple","isComponent","instance","all","v2","EntityEvent","Entity","refs","json","entityData","createOrGetById","any","none","hasAny","hasAll","hasNone","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","Always","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","backtrace","node","x0","y0","x1","y1","sx","sy","dx","dy","err","e2","abs","line","biBacktrace","nodeA","nodeB","pathA","pathB","pathLength","a","b","sqrt","expandPath","coord0","coord1","interpolated","interpolatedLen","j","expanded","smoothenPath","grid","newPath","coord","testCoord","blocked","isWalkableAt","lastValidCoord","compressPath","lx","ly","ldx","ldy","sq","compressed","px","py","manhattan","euclidean","octile","F","SQRT2","chebyshev","Heap","Util","Heuristic","JumpPointFinderBase","opt","heuristic","trackJumpRecursion","findPath","startX","startY","endX","endY","openList","f","startNode","getNodeAt","endNode","g","opened","empty","closed","_identifySuccessors","neighbors","neighbor","jumpPoint","jx","jy","ng","jumpNode","_findNeighbors","_jump","h","updateItem","walkable","DiagonalMovement","AStarFinder","allowDiagonal","dontCrossCorners","weight","diagonalMovement","getNeighbors","BiAStarFinder","cmp","startOpenList","endOpenList","webpackPolyfill","deprecate","children","window","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","_siftdown","_siftup","lo","hi","lastelt","returnitem","_ref","_i","_len","_ref1","_results","_results1","_j","pos","elem","los","startpos","newitem","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","heap","insert","top","front","Node","Grid","width_or_matrix","height","matrix","width","_buildNodes","isInside","setWalkableAt","s0","d0","s1","d1","s2","d2","s3","d3","thisNodes","newGrid","newNodes","BestFirstFinder","orig","BreadthFirstFinder","shift","DijkstraFinder","BiBestFirstFinder","BiBreadthFirstFinder","by","BiDijkstraFinder","IDAStarFinder","trackRecursion","timeLimit","route","getTime","cutoff","k","neighbour","neighbours","retainCount","tested","cutOff","JPFNeverMoveDiagonally","JPFAlwaysMoveDiagonally","JPFMoveDiagonallyIfNoObstacles","JPFMoveDiagonallyIfAtMostOneObstacle","neighborNodes","neighborNode","isNextWalkable","isTopWalkable","isBottomWalkable","isRightWalkable","isLeftWalkable","CARDINAL","DIAGONAL","toCell","cellOrId","cell","idToCell","toLocId","cellToId","insideCircle","center","tile","radius","rectangle","tileProps","hasWalls","tiles","x2","y2","yi","xi","coords","pixelRatio","devicePixelRatio","canvas","document","querySelector","ctx","getContext","messageLog","playerHud","infoBar","inventory","menu","calculatedFontSize","innerWidth","cellWidth","cellHeight","fontSize","style","cssText","font","textAlign","textBaseline","drawChar","fillStyle","fillText","drawBackground","fillRect","drawCell","drawText","text","clearCanvas","w","posX","posY","clearRect","pxToCell","ev","bounds","getBoundingClientRect","relativeX","clientX","left","relativeY","clientY","trunc","Engine","registerComponent","registerPrefab","digHorizontalPassage","sprite","digVerticalPassage","createDungeon","minRoomSize","maxRoomSize","maxRoomCount","dungeon","rooms","roomTiles","rw","rh","rx","ry","candidate","room","rect2","rect1","passageTiles","prevRoom","curr","createPrefab","baseMatrix","aiEntities","createQuery","moveToTarget","goal","JSON","parse","stringify","eId","isBlocking","PF","aStar","newLoc","animatingEntities","animation","gameState","hex","fireEvent","frameTime","framePercent","activeEffectsEntities","effects","activeEffects","event","octantTransforms","xx","xy","yx","yy","createFOV","opaqueEntities","originX","originY","originZ","visible","blockingLocations","isOpaque","reveal","castShadows","row","newStart","distance","deltaY","deltaX","currentX","currentY","leftSlope","rightSlope","octant","fov","cell1","cell2","pow","inFovEntities","origin","FOV","entitiesAtLoc","movableEntities","movement","mx","move","my","mz","blockers","damage","power","defense","health","addLog","description","attack","layer100Entities","layer300Entities","layer400Entities","renderMap","isInFov","renderPlayerHud","player","hp","renderMessageLog","clearInfoBar","renderInfoBar","mPos","isRevealed","renderInventory","rect","idx","selectedInventoryIndex","render","onmousemove","targetingEntities","targeting","targetingItem","unshift","enemiesInFOV","createDungeonLevel","stairsUp","stairsDown","createStairsUp","createStairsDown","openTiles","goToDungeonLevel","level","goingUp","initGame","userInput","playerTurn","addEventListener","processUserInput","gameSaveData","localStorage","getItem","playerId","loadGame","newGame","setItem","pickupFound","isPickup","requiresTarget","isDead","requestAnimationFrame","gameLoop","onclick","bottom","right","locsIds","cx","cy","circle"],"mappings":"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","file":"main.8525fcff02d7977f32b7.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","import { remove } from \"lodash\";\nimport { Component } from \"geotic\";\nimport { addCacheSet, deleteCacheSet } from \"./cache\";\n\nconst effectProps = {\n  component: \"\",\n  delta: \"\",\n  animate: { char: \"\", color: \"\" },\n  events: [], // { name: \"\", args: {} },\n  addComponents: [], // { name: '', properties: {} }\n  duration: 0, // in turns\n};\n\nexport class ActiveEffects extends Component {\n  static allowMultiple = true;\n  static properties = effectProps;\n}\n\nexport class Ai extends Component {}\n\nexport class Animate extends Component {\n  static allowMultiple = true;\n  static properties = {\n    startTime: null,\n    duration: 250,\n    char: \"\",\n    color: \"\",\n  };\n\n  onSetStartTime(evt) {\n    this.startTime = evt.data.time;\n  }\n}\n\nexport class Appearance extends Component {\n  static properties = {\n    color: \"#ff0077\",\n    char: \"?\",\n    background: \"#000\",\n  };\n}\n\nexport class Defense extends Component {\n  static properties = { max: 1, current: 1 };\n}\n\nexport class Description extends Component {\n  static properties = { name: \"No Name\" };\n}\n\nexport class Effects extends Component {\n  static allowMultiple = true;\n  static properties = effectProps;\n}\n\nexport class Health extends Component {\n  static properties = { max: 10, current: 10 };\n\n  onTakeDamage(evt) {\n    this.current -= evt.data.amount;\n\n    if (this.current <= 0) {\n      this.entity.appearance.char = \"%\";\n      this.entity.remove(\"Ai\");\n      this.entity.remove(\"IsBlocking\");\n      this.entity.add(\"IsDead\");\n      this.entity.remove(\"Layer400\");\n      this.entity.add(\"Layer300\");\n    }\n\n    evt.handle();\n  }\n}\n\nexport class Inventory extends Component {\n  static properties = {\n    list: \"<EntityArray>\",\n  };\n\n  onPickUp(evt) {\n    this.list.push(evt.data);\n\n    if (evt.data.position) {\n      evt.data.remove(\"Position\");\n    }\n  }\n\n  onDrop(evt) {\n    remove(this.list, (x) => x.id === evt.data.id);\n    evt.data.add(\"Position\", this.entity.position);\n  }\n}\n\nexport class IsBlocking extends Component {}\n\nexport class IsDead extends Component {}\n\nexport class IsInFov extends Component {}\n\nexport class IsOpaque extends Component {}\n\nexport class IsPickup extends Component {}\n\nexport class IsRevealed extends Component {}\n\nexport class Layer100 extends Component {}\n\nexport class Layer300 extends Component {}\n\nexport class Layer400 extends Component {}\n\nexport class Move extends Component {\n  static properties = { x: 0, y: 0, z: 0, relative: true };\n}\n\nexport class Paralyzed extends Component {}\n\nexport class Position extends Component {\n  static properties = { x: 0, y: 0, z: -1 };\n\n  onAttached() {\n    const locId = `${this.entity.position.x},${this.entity.position.y},${this.entity.position.z}`;\n    addCacheSet(\"entitiesAtLocation\", locId, this.entity.id);\n  }\n\n  onDetached() {\n    const locId = `${this.x},${this.y},${this.z}`;\n    deleteCacheSet(\"entitiesAtLocation\", locId, this.entity.id);\n  }\n}\n\nexport class Power extends Component {\n  static properties = { max: 5, current: 5 };\n}\n\nexport class RequiresTarget extends Component {\n  static properties = {\n    acquired: \"RANDOM\",\n    aoeRange: 0,\n  };\n}\n\nexport class Target extends Component {\n  static allowMultiple = true;\n  static properties = { locId: \"\" };\n}\n\nexport class TargetingItem extends Component {\n  static properties = { item: \"<Entity>\" };\n}\n","import { get, set } from \"lodash\";\n\nexport const cache = {\n  entitiesAtLocation: {},\n  z: -1,\n  floors: {}, // { z: { stairsUp: '', stairsDown: '' } }\n};\n\nexport const addCache = (path, value) => {\n  set(cache, path, value);\n};\n\nexport const readCache = (path) => get(cache, path);\n\nexport const addCacheSet = (name, key, value) => {\n  if (cache[name][key]) {\n    cache[name][key].add(value);\n  } else {\n    cache[name][key] = new Set();\n    cache[name][key].add(value);\n  }\n};\n\nexport const deleteCacheSet = (name, key, value) => {\n  if (cache[name][key] && cache[name][key].has(value)) {\n    cache[name][key].delete(value);\n  }\n};\n\nexport const readCacheSet = (name, key, value) => {\n  if (cache[name][key]) {\n    if (value) {\n      return cache[name][key].get(value);\n    }\n\n    return cache[name][key];\n  }\n};\n\nexport const serializeCache = () => {\n  const entitiesAtLocation = Object.keys(cache.entitiesAtLocation).reduce(\n    (acc, val) => {\n      acc[val] = [...cache.entitiesAtLocation[val]];\n      return acc;\n    },\n    {}\n  );\n\n  return {\n    entitiesAtLocation,\n    z: cache.z,\n    floors: cache.floors,\n  };\n};\n\nexport const deserializeCache = (data) => {\n  cache.entitiesAtLocation = Object.keys(data.entitiesAtLocation).reduce(\n    (acc, val) => {\n      acc[val] = new Set(data.entitiesAtLocation[val]);\n      return acc;\n    },\n    {}\n  );\n\n  cache.z = data.z;\n  cache.floors = data.floors;\n};\n\nexport const clearCache = () => {\n  cache.entitiesAtLocation = {};\n  cache.z = 1;\n};\n\nexport default cache;\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n","module.exports = require('./lib/heap');\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n","module.exports = require('./src/PathFinding');\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n","import { grid } from \"../lib/canvas\";\nimport { sample } from \"lodash\";\n\nexport const CARDINAL = [\n  { x: 0, y: -1 }, // N\n  { x: 1, y: 0 }, // E\n  { x: 0, y: 1 }, // S\n  { x: -1, y: 0 }, // W\n];\n\nexport const DIAGONAL = [\n  { x: 1, y: -1 }, // NE\n  { x: 1, y: 1 }, // SE\n  { x: -1, y: 1 }, // SW\n  { x: -1, y: -1 }, // NW\n];\n\nexport const ALL = [...CARDINAL, ...DIAGONAL];\n\nexport const toCell = (cellOrId) => {\n  let cell = cellOrId;\n  if (typeof cell === \"string\") cell = idToCell(cell);\n\n  return cell;\n};\n\nexport const toLocId = (cellOrId) => {\n  let locId = cellOrId;\n  if (typeof locId !== \"string\") locId = cellToId(locId);\n\n  return locId;\n};\n\nconst insideCircle = (center, tile, radius) => {\n  const dx = center.x - tile.x;\n  const dy = center.y - tile.y;\n  const distance_squared = dx * dx + dy * dy;\n  return distance_squared <= radius * radius;\n};\n\nexport const circle = (center, radius) => {\n  const diameter = radius % 1 ? radius * 2 : radius * 2 + 1;\n  const top = center.y - radius;\n  const bottom = center.y + radius;\n  const left = center.x - radius;\n  const right = center.x + radius;\n\n  const locsIds = [];\n\n  for (let y = top; y <= bottom; y++) {\n    for (let x = left; x <= right; x++) {\n      const cx = Math.ceil(x);\n      const cy = Math.ceil(y);\n      if (insideCircle(center, { x: cx, y: cy }, radius)) {\n        locsIds.push(`${cx},${cy}`);\n      }\n    }\n  }\n\n  return locsIds;\n};\n\nexport const rectangle = ({ x, y, z, width, height, hasWalls }, tileProps) => {\n  const tiles = {};\n\n  const x1 = x;\n  const x2 = x + width - 1;\n  const y1 = y;\n  const y2 = y + height - 1;\n  if (hasWalls) {\n    for (let yi = y1 + 1; yi <= y2 - 1; yi++) {\n      for (let xi = x1 + 1; xi <= x2 - 1; xi++) {\n        tiles[`${xi},${yi},${z}`] = { x: xi, y: yi, z, ...tileProps };\n      }\n    }\n  } else {\n    for (let yi = y1; yi <= y2; yi++) {\n      for (let xi = x1; xi <= x2; xi++) {\n        tiles[`${xi},${yi},${z}`] = { x: xi, y: yi, z, ...tileProps };\n      }\n    }\n  }\n\n  const center = {\n    x: Math.round((x1 + x2) / 2),\n    y: Math.round((y1 + y2) / 2),\n    z,\n  };\n\n  return { x1, x2, y1, y2, center, hasWalls, tiles };\n};\n\nexport const rectsIntersect = (rect1, rect2) => {\n  return (\n    rect1.x1 <= rect2.x2 &&\n    rect1.x2 >= rect2.x1 &&\n    rect1.y1 <= rect2.y2 &&\n    rect1.y2 >= rect2.y1\n  );\n};\n\nexport const distance = (cell1, cell2) => {\n  const x = Math.pow(cell2.x - cell1.x, 2);\n  const y = Math.pow(cell2.y - cell1.y, 2);\n  return Math.floor(Math.sqrt(x + y));\n};\n\nexport const idToCell = (id) => {\n  const coords = id.split(\",\");\n  return {\n    x: parseInt(coords[0], 10),\n    y: parseInt(coords[1], 10),\n    z: parseInt(coords[2], 10),\n  };\n};\n\nexport const cellToId = ({ x, y, z }) => `${x},${y},${z}`;\n\nexport const isOnMapEdge = (x, y) => {\n  const { width, height, x: mapX, y: mapY } = grid.map;\n\n  if (x === mapX) return true; // west edge\n  if (y === mapY) return true; // north edge\n  if (x === mapX + width - 1) return true; // east edge\n  if (y === mapY + height - 1) return true; // south edge\n  return false;\n};\n\nexport const getNeighbors = ({ x, y }, direction = CARDINAL) => {\n  const points = [];\n  for (let dir of direction) {\n    let candidate = {\n      x: x + dir.x,\n      y: y + dir.y,\n    };\n    if (\n      candidate.x >= 0 &&\n      candidate.x < grid.width &&\n      candidate.y >= 0 &&\n      candidate.y < grid.height\n    ) {\n      points.push(candidate);\n    }\n  }\n  return points;\n};\n\nexport const getNeighborIds = (cellOrId, direction = \"CARDINAL\") => {\n  let cell = toCell(cellOrId);\n\n  if (direction === \"CARDINAL\") {\n    return getNeighbors(cell, CARDINAL).map(cellToId);\n  }\n\n  if (direction === \"DIAGONAL\") {\n    return getNeighbors(cell, DIAGONAL).map(cellToId);\n  }\n\n  if (direction === \"ALL\") {\n    return [\n      ...getNeighbors(cell, CARDINAL).map(cellToId),\n      ...getNeighbors(cell, DIAGONAL).map(cellToId),\n    ];\n  }\n};\n\nexport const isNeighbor = (a, b) => {\n  let posA = a;\n  if (typeof posA === \"string\") {\n    posA = idToCell(a);\n  }\n\n  let posB = b;\n  if (typeof posB === \"string\") {\n    posB = idToCell(b);\n  }\n\n  const { x: ax, y: ay } = posA;\n  const { x: bx, y: by } = posB;\n\n  if (\n    (ax - bx === 1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === -1) ||\n    (ax - bx === -1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === 1)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const randomNeighbor = (startX, startY) => {\n  const direction = sample(CARDINAL);\n  const x = startX + direction.x;\n  const y = startY + direction.y;\n  return { x, y };\n};\n\nexport const getNeighbor = (x, y, dir) => {\n  const dirMap = { N: 0, E: 1, S: 2, W: 3 };\n  const direction = CARDINAL[dirMap[dir]];\n  return {\n    x: x + direction.x,\n    y: y + direction.y,\n  };\n};\n\nexport const getDirection = (a, b) => {\n  const cellA = toCell(a);\n  const cellB = toCell(b);\n\n  const { x: ax, y: ay } = cellA;\n  const { x: bx, y: by } = cellB;\n\n  let dir;\n\n  if (ax - bx === 1 && ay - by === 0) dir = \"→\";\n  if (ax - bx === 0 && ay - by === -1) dir = \"↑\";\n  if (ax - bx === -1 && ay - by === 0) dir = \"←\";\n  if (ax - bx === 0 && ay - by === 1) dir = \"↓\";\n\n  return dir;\n};\n","import { rectangle } from \"./grid\";\n\nconst pixelRatio = window.devicePixelRatio || 1;\nconst canvas = document.querySelector(\"#canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nexport const grid = {\n  width: 100,\n  height: 35,\n\n  map: {\n    width: 79,\n    height: 29,\n    x: 21,\n    y: 3,\n  },\n\n  messageLog: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 0,\n  },\n\n  playerHud: {\n    width: 20,\n    height: 34,\n    x: 0,\n    y: 0,\n  },\n\n  infoBar: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 32,\n  },\n\n  inventory: {\n    width: 37,\n    height: 28,\n    x: 21,\n    y: 4,\n  },\n\n  menu: {\n    width: 100,\n    height: 1,\n    x: 0,\n    y: 33,\n  },\n};\n\nconst lineHeight = 1.2;\n\nlet calculatedFontSize = window.innerWidth / grid.width;\nlet cellWidth = calculatedFontSize * pixelRatio;\nlet cellHeight = calculatedFontSize * lineHeight * pixelRatio;\nlet fontSize = calculatedFontSize * pixelRatio;\n\ncanvas.style.cssText = `width: ${calculatedFontSize * grid.width}; height: ${\n  calculatedFontSize * lineHeight * grid.height\n}`;\ncanvas.width = cellWidth * grid.width;\ncanvas.height = cellHeight * grid.height;\n\nctx.font = `normal ${fontSize}px 'Fira Code'`;\nctx.textAlign = \"center\";\nctx.textBaseline = \"middle\";\n\nexport const drawChar = ({ char, color, position }) => {\n  ctx.fillStyle = color;\n  ctx.fillText(\n    char,\n    position.x * cellWidth + cellWidth / 2,\n    position.y * cellHeight + cellHeight / 2\n  );\n};\n\nconst drawBackground = ({ color, position }) => {\n  if (color === \"transparent\") return;\n\n  ctx.fillStyle = color;\n\n  ctx.fillRect(\n    position.x * cellWidth,\n    position.y * cellHeight,\n    cellWidth,\n    cellHeight\n  );\n};\n\nexport const drawCell = (entity, options = {}) => {\n  const char = options.char || entity.appearance.char;\n  const background = options.background || entity.appearance.background;\n  const color = options.color || entity.appearance.color;\n  const position = entity.position;\n\n  drawBackground({ color: background, position });\n  drawChar({ char, color, position });\n};\n\nexport const drawText = (template) => {\n  const textToRender = template.text;\n\n  textToRender.split(\"\").forEach((char, index) => {\n    const options = { ...template };\n    const character = {\n      appearance: {\n        char,\n        background: options.background,\n        color: options.color,\n      },\n      position: {\n        x: index + options.x,\n        y: options.y,\n      },\n    };\n\n    delete options.x;\n    delete options.y;\n\n    drawCell(character, options);\n  });\n};\n\nexport const drawRect = (x, y, width, height, color) => {\n  const rect = rectangle({ x, y, width, height });\n\n  Object.values(rect.tiles).forEach((position) => {\n    drawBackground({ color, position });\n  });\n};\n\nexport const clearCanvas = (x, y, w, h) => {\n  const posX = x * cellWidth;\n  const posY = y * cellHeight;\n\n  const width = cellWidth * w;\n  const height = cellHeight * h;\n\n  ctx.clearRect(posX, posY, width, height);\n};\n\nexport const pxToCell = (ev) => {\n  const bounds = canvas.getBoundingClientRect();\n  const relativeX = ev.clientX - bounds.left;\n  const relativeY = ev.clientY - bounds.top;\n  const colPos = Math.trunc((relativeX / cellWidth) * pixelRatio);\n  const rowPos = Math.trunc((relativeY / cellHeight) * pixelRatio);\n\n  return [colPos, rowPos];\n};\n","import { Engine } from \"geotic\";\nimport {\n  ActiveEffects,\n  Ai,\n  Animate,\n  Appearance,\n  Description,\n  Defense,\n  Effects,\n  Health,\n  Inventory,\n  IsBlocking,\n  IsDead,\n  IsInFov,\n  IsOpaque,\n  IsPickup,\n  IsRevealed,\n  Layer100,\n  Layer300,\n  Layer400,\n  Move,\n  Paralyzed,\n  Position,\n  Power,\n  RequiresTarget,\n  Target,\n  TargetingItem,\n} from \"./components\";\n\nimport {\n  Being,\n  Item,\n  Tile,\n  HealthPotion,\n  ScrollFireball,\n  ScrollLightning,\n  ScrollParalyze,\n  Goblin,\n  Player,\n  Wall,\n  Floor,\n  StairsUp,\n  StairsDown,\n} from \"./prefabs\";\n\nconst ecs = new Engine();\n\n// all Components must be `registered` by the engine\necs.registerComponent(ActiveEffects);\necs.registerComponent(Animate);\necs.registerComponent(Ai);\necs.registerComponent(Appearance);\necs.registerComponent(Description);\necs.registerComponent(Defense);\necs.registerComponent(Effects);\necs.registerComponent(Health);\necs.registerComponent(Inventory);\necs.registerComponent(IsBlocking);\necs.registerComponent(IsDead);\necs.registerComponent(IsInFov);\necs.registerComponent(IsOpaque);\necs.registerComponent(IsPickup);\necs.registerComponent(IsRevealed);\necs.registerComponent(Layer100);\necs.registerComponent(Layer300);\necs.registerComponent(Layer400);\necs.registerComponent(Move);\necs.registerComponent(Paralyzed);\necs.registerComponent(Position);\necs.registerComponent(Power);\necs.registerComponent(RequiresTarget);\necs.registerComponent(Target);\necs.registerComponent(TargetingItem);\n\n// register \"base\" prefabs first!\necs.registerPrefab(Tile);\necs.registerPrefab(Being);\necs.registerPrefab(Item);\n\necs.registerPrefab(HealthPotion);\necs.registerPrefab(Wall);\necs.registerPrefab(Floor);\necs.registerPrefab(Goblin);\necs.registerPrefab(Player);\necs.registerPrefab(ScrollFireball);\necs.registerPrefab(ScrollLightning);\necs.registerPrefab(ScrollParalyze);\necs.registerPrefab(StairsUp);\necs.registerPrefab(StairsDown);\n\nexport default ecs;\n","// Base\nexport const Tile = {\n  name: \"Tile\",\n  components: [\n    { type: \"Appearance\" },\n    { type: \"Description\" },\n    { type: \"Layer100\" },\n  ],\n};\n\nexport const Being = {\n  name: \"Being\",\n  components: [\n    { type: \"Appearance\" },\n    { type: \"Defense\" },\n    { type: \"Description\" },\n    { type: \"Health\" },\n    { type: \"IsBlocking\" },\n    { type: \"Layer400\" },\n    { type: \"Power\" },\n  ],\n};\n\nexport const Item = {\n  name: \"Item\",\n  components: [\n    { type: \"Appearance\" },\n    { type: \"Description\" },\n    { type: \"Layer300\" },\n    { type: \"IsPickup\" },\n  ],\n};\n\n// Complex\nexport const HealthPotion = {\n  name: \"HealthPotion\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"!\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"health potion\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        component: \"health\",\n        delta: 5,\n        animate: { color: \"#ff0000\", char: \"♥\" },\n      },\n    },\n  ],\n};\n\nexport const ScrollLightning = {\n  name: \"ScrollLightning\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"♪\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"scroll of lightning\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        animate: { color: \"#F7FF00\" },\n        events: [\n          {\n            name: \"take-damage\",\n            args: { amount: 25 },\n          },\n        ],\n      },\n    },\n    { type: \"RequiresTarget\", properties: { acquired: \"RANDOM\" } },\n  ],\n};\n\nexport const ScrollParalyze = {\n  name: \"ScrollParalyze\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"♪\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"scroll of paralyze\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        animate: { color: \"#FFB0B0\" },\n        addComponents: [\n          {\n            name: \"Paralyzed\",\n            properties: {},\n          },\n        ],\n        duration: 10,\n      },\n    },\n    { type: \"RequiresTarget\", properties: { acquired: \"MANUAL\" } },\n  ],\n};\n\nexport const ScrollFireball = {\n  name: \"ScrollFireball\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"♪\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"scroll of fireball\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        animate: { color: \"#FFA200\", char: \"^\" },\n        events: [\n          {\n            name: \"take-damage\",\n            args: { amount: 25 },\n          },\n        ],\n      },\n    },\n    {\n      type: \"RequiresTarget\",\n      properties: {\n        acquired: \"MANUAL\",\n        aoeRange: 3,\n      },\n    },\n  ],\n};\n\nexport const Wall = {\n  name: \"Wall\",\n  inherit: [\"Tile\"],\n  components: [\n    { type: \"IsBlocking\" },\n    { type: \"IsOpaque\" },\n    {\n      type: \"Appearance\",\n      properties: { char: \"#\", color: \"#AAA\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"wall\" },\n    },\n  ],\n};\n\nexport const Floor = {\n  name: \"Floor\",\n  inherit: [\"Tile\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"•\", color: \"#555\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"floor\" },\n    },\n  ],\n};\n\nexport const StairsUp = {\n  name: \"StairsUp\",\n  inherit: [\"Tile\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"<\", color: \"#AAA\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"set of stairs leading up\" },\n    },\n  ],\n};\n\nexport const StairsDown = {\n  name: \"StairsDown\",\n  inherit: [\"Tile\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \">\", color: \"#AAA\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"set of stairs leading down\" },\n    },\n  ],\n};\n\nexport const Player = {\n  name: \"Player\",\n  inherit: [\"Being\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"@\", color: \"#FFF\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"You\" },\n    },\n    { type: \"Inventory\" },\n  ],\n};\n\nexport const Goblin = {\n  name: \"Goblin\",\n  inherit: [\"Being\"],\n  components: [\n    { type: \"Ai\" },\n    {\n      type: \"Appearance\",\n      properties: { char: \"g\", color: \"green\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"goblin\" },\n    },\n  ],\n};\n","import { random, times } from \"lodash\";\nimport ecs from \"../state/ecs\";\nimport { rectangle, rectsIntersect } from \"./grid\";\nimport { Position } from \"../state/components\";\n\nfunction digHorizontalPassage(x1, x2, y, z) {\n  const tiles = {};\n  const start = Math.min(x1, x2);\n  const end = Math.max(x1, x2) + 1;\n  let x = start;\n\n  while (x < end) {\n    tiles[`${x},${y},${z}`] = { x, y, z, sprite: \"FLOOR\" };\n    x++;\n  }\n\n  return tiles;\n}\n\nfunction digVerticalPassage(y1, y2, x, z) {\n  const tiles = {};\n  const start = Math.min(y1, y2);\n  const end = Math.max(y1, y2) + 1;\n  let y = start;\n\n  while (y < end) {\n    tiles[`${x},${y},${z}`] = { x, y, z, sprite: \"FLOOR\" };\n    y++;\n  }\n\n  return tiles;\n}\n\nexport const createDungeon = ({\n  x,\n  y,\n  z,\n  width,\n  height,\n  minRoomSize = 6,\n  maxRoomSize = 12,\n  maxRoomCount = 30,\n}) => {\n  // fill the entire space with walls so we can dig it out later\n  const dungeon = rectangle(\n    { x, y, z, width, height },\n    {\n      sprite: \"WALL\",\n    }\n  );\n\n  const rooms = [];\n  let roomTiles = {};\n\n  times(maxRoomCount, () => {\n    let rw = random(minRoomSize, maxRoomSize);\n    let rh = random(minRoomSize, maxRoomSize);\n    let rx = random(x, width + x - rw - 1);\n    let ry = random(y, height + y - rh - 1);\n\n    // create a candidate room\n    const candidate = rectangle(\n      { x: rx, y: ry, z, width: rw, height: rh, hasWalls: true },\n      { sprite: \"FLOOR\" }\n    );\n\n    // test if candidate is overlapping with any existing rooms\n    if (!rooms.some((room) => rectsIntersect(room, candidate))) {\n      rooms.push(candidate);\n      roomTiles = { ...roomTiles, ...candidate.tiles };\n    }\n  });\n\n  let prevRoom = null;\n  let passageTiles;\n\n  for (let room of rooms) {\n    if (prevRoom) {\n      const prev = prevRoom.center;\n      const curr = room.center;\n\n      passageTiles = {\n        ...passageTiles,\n        ...digHorizontalPassage(prev.x, curr.x, curr.y, z),\n        ...digVerticalPassage(prev.y, curr.y, prev.x, z),\n      };\n    }\n\n    prevRoom = room;\n  }\n\n  dungeon.rooms = rooms;\n  dungeon.tiles = { ...dungeon.tiles, ...roomTiles, ...passageTiles };\n\n  // create tile entities\n  Object.keys(dungeon.tiles).forEach((key) => {\n    const tile = dungeon.tiles[key];\n\n    if (tile.sprite === \"WALL\") {\n      ecs.createPrefab(\"Wall\").add(Position, { ...dungeon.tiles[key], z });\n    }\n\n    if (tile.sprite === \"FLOOR\") {\n      ecs.createPrefab(\"Floor\").add(Position, { ...dungeon.tiles[key], z });\n    }\n  });\n\n  return dungeon;\n};\n","import PF from \"pathfinding\";\nimport { some, times } from \"lodash\";\nimport ecs from \"../state/ecs\";\nimport { readCache, readCacheSet } from \"../state/cache\";\nimport { toCell } from \"./grid\";\nimport { grid } from \"./canvas\";\n\nconst baseMatrix = [];\ntimes(grid.height, () => baseMatrix.push(new Array(grid.width).fill(0)));\n\nexport const aStar = (start, goal) => {\n  const matrix = JSON.parse(JSON.stringify(baseMatrix));\n\n  const locIds = Object.keys(readCache(\"entitiesAtLocation\"));\n\n  locIds.forEach((locId) => {\n    const cell = toCell(locId);\n    if (cell.z === readCache(\"z\")) {\n      if (\n        some([...readCacheSet(\"entitiesAtLocation\", locId)], (eId) => {\n          return ecs.getEntity(eId).isBlocking;\n        })\n      ) {\n        matrix[cell.y][cell.x] = 1;\n      }\n    }\n  });\n\n  matrix[start.y][start.x] = 0;\n  matrix[goal.y][goal.x] = 0;\n\n  const grid = new PF.Grid(matrix);\n  const finder = new PF.AStarFinder({\n    allowDiagonal: false,\n    dontCrossCorners: true,\n  });\n\n  const path = finder.findPath(start.x, start.y, goal.x, goal.y, grid);\n\n  return path;\n};\n","import ecs from \"../state/ecs\";\nimport { Ai, Description } from \"../state/components\";\nimport { aStar } from \"../lib/pathfinding\";\nimport { readCache } from \"../state/cache\";\n\nconst aiEntities = ecs.createQuery({\n  all: [Ai, Description],\n});\n\nconst moveToTarget = (entity, target) => {\n  const path = aStar(entity.position, target.position);\n  if (path.length) {\n    const newLoc = path[1];\n    entity.add(\"Move\", {\n      x: newLoc[0],\n      y: newLoc[1],\n      z: readCache(\"z\"),\n      relative: false,\n    });\n  }\n};\n\nexport const ai = (player) => {\n  aiEntities.get().forEach((entity) => {\n    if (entity.has(\"IsInFov\")) {\n      moveToTarget(entity, player);\n    }\n  });\n};\n","import { last } from \"lodash\";\nimport ecs from \"../state/ecs\";\nimport { clearCanvas, drawCell } from \"../lib/canvas\";\nconst { Animate, IsInFov } = require(\"../state/components\");\nimport { gameState } from \"../index\";\n\nconst animatingEntities = ecs.createQuery({\n  all: [Animate],\n});\n\nconst hexToRgb = (hex) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : {};\n};\n\nexport const animation = () => {\n  if (gameState !== \"GAME\") {\n    return;\n  }\n\n  animatingEntities.get().forEach((entity) => {\n    const animate = last(entity.animate);\n\n    const { r = 255, g = 255, b = 255 } = hexToRgb(animate.color);\n\n    const time = new Date();\n    // set animation startTime\n    if (!animate.startTime) {\n      entity.fireEvent(\"set-start-time\", { time });\n    }\n    const frameTime = time - animate.startTime;\n    // end animation when complete\n    if (frameTime > animate.duration) {\n      return entity.remove(\"Animate\");\n    }\n    const framePercent = frameTime / animate.duration;\n    // do the animation\n    // clear the cell first\n    clearCanvas(entity.position.x, entity.position.y, 1, 1);\n\n    // redraw the existing entity\n    drawCell(entity);\n\n    // draw the animation over top\n    drawCell({\n      appearance: {\n        char: animate.char || entity.appearance.char,\n        color: `rgba(${r}, ${g}, ${b}, ${1 - framePercent})`,\n        background: \"transparent\",\n      },\n      position: entity.position,\n    });\n  });\n};\n","import ecs from \"../state/ecs\";\nconst { ActiveEffects } = require(\"../state/components\");\n\nconst activeEffectsEntities = ecs.createQuery({\n  all: [ActiveEffects],\n});\n\nexport const effects = () => {\n  activeEffectsEntities.get().forEach((entity) => {\n    entity.activeEffects.forEach((c) => {\n      if (entity[c.component]) {\n        entity[c.component].current += c.delta;\n\n        if (entity[c.component].current > entity[c.component].max) {\n          entity[c.component].current = entity[c.component].max;\n        }\n      }\n\n      if (c.events.length) {\n        c.events.forEach((event) => entity.fireEvent(event.name, event.args));\n      }\n\n      // handle addComponents\n      if (c.addComponents.length) {\n        c.addComponents.forEach((component) => {\n          if (!entity.has(component.name)) {\n            entity.add(component.name, component.properties);\n          }\n        });\n      }\n\n      entity.add(\"Animate\", { ...c.animate });\n\n      if (!c.duration) {\n        c.remove();\n\n        if (c.addComponents.length) {\n          c.addComponents.forEach((component) => {\n            if (entity.has(component.name)) {\n              entity.remove(component.name, component.properties);\n            }\n          });\n        }\n      } else {\n        c.duration -= 1;\n      }\n    });\n  });\n};\n","import { distance, idToCell } from \"./grid\";\n\nconst octantTransforms = [\n  { xx: 1, xy: 0, yx: 0, yy: 1 },\n  { xx: 1, xy: 0, yx: 0, yy: -1 },\n  { xx: -1, xy: 0, yx: 0, yy: 1 },\n  { xx: -1, xy: 0, yx: 0, yy: -1 },\n  { xx: 0, xy: 1, yx: 1, yy: 0 },\n  { xx: 0, xy: 1, yx: -1, yy: 0 },\n  { xx: 0, xy: -1, yx: 1, yy: 0 },\n  { xx: 0, xy: -1, yx: -1, yy: 0 },\n];\n\n// width: width of map (or visible map?)\n// height: height of map (or visible map?)\nexport default function createFOV(\n  opaqueEntities,\n  width,\n  height,\n  originX,\n  originY,\n  originZ,\n  radius\n) {\n  const visible = new Set();\n\n  const blockingLocations = new Set();\n  opaqueEntities.get().forEach((x) => {\n    if (x.position.z === originZ) {\n      blockingLocations.add(`${x.position.x},${x.position.y},${x.position.z}`);\n    }\n  });\n\n  const isOpaque = (x, y) => {\n    const locId = `${x},${y},${originZ}`;\n    return !!blockingLocations.has(locId);\n  };\n  const reveal = (x, y) => {\n    return visible.add(`${x},${y},${originZ}`);\n  };\n\n  function castShadows(originX, originY, row, start, end, transform, radius) {\n    let newStart = 0;\n    if (start < end) return;\n\n    let blocked = false;\n\n    for (let distance = row; distance < radius && !blocked; distance++) {\n      let deltaY = -distance;\n      for (let deltaX = -distance; deltaX <= 0; deltaX++) {\n        let currentX = originX + deltaX * transform.xx + deltaY * transform.xy;\n        let currentY = originY + deltaX * transform.yx + deltaY * transform.yy;\n\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5);\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5);\n\n        if (\n          !(\n            currentX >= 0 &&\n            currentY >= 0 &&\n            currentX < width &&\n            currentY < height\n          ) ||\n          start < rightSlope\n        ) {\n          continue;\n        } else if (end > leftSlope) {\n          break;\n        }\n\n        if (Math.sqrt(deltaX * deltaX + deltaY * deltaY) <= radius) {\n          reveal(currentX, currentY);\n        }\n\n        if (blocked) {\n          if (isOpaque(currentX, currentY)) {\n            newStart = rightSlope;\n            continue;\n          } else {\n            blocked = false;\n            start = newStart;\n          }\n        } else {\n          if (isOpaque(currentX, currentY) && distance < radius) {\n            blocked = true;\n            castShadows(\n              originX,\n              originY,\n              distance + 1,\n              start,\n              leftSlope,\n              transform,\n              radius\n            );\n            newStart = rightSlope;\n          }\n        }\n      }\n    }\n  }\n\n  reveal(originX, originY);\n  for (let octant of octantTransforms) {\n    castShadows(originX, originY, 1, 1, 0, octant, radius);\n  }\n\n  return {\n    fov: visible,\n    distance: [...visible].reduce((acc, val) => {\n      const cell = idToCell(val);\n      acc[val] = distance({ x: originX, y: originY }, { x: cell.x, y: cell.y });\n      return acc;\n    }, {}),\n  };\n}\n","import { readCacheSet } from \"../state/cache\";\nimport ecs from \"../state/ecs\";\nimport { grid } from \"../lib/canvas\";\nimport createFOV from \"../lib/fov\";\nimport { IsInFov, IsOpaque, IsRevealed } from \"../state/components\";\nimport { readCache } from \"../state/cache\";\n\nconst inFovEntities = ecs.createQuery({\n  all: [IsInFov],\n});\n\nconst opaqueEntities = ecs.createQuery({\n  all: [IsOpaque],\n});\n\nexport const fov = (origin) => {\n  const { width, height } = grid;\n\n  const originX = origin.position.x;\n  const originY = origin.position.y;\n\n  const FOV = createFOV(\n    opaqueEntities,\n    width,\n    height,\n    originX,\n    originY,\n    readCache(\"z\"),\n    10\n  );\n\n  // clear out stale fov\n  inFovEntities.get().forEach((x) => x.remove(IsInFov));\n\n  FOV.fov.forEach((locId) => {\n    const entitiesAtLoc = readCacheSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eId) => {\n        const entity = ecs.getEntity(eId);\n        entity.add(IsInFov);\n\n        if (!entity.has(\"IsRevealed\")) {\n          entity.add(IsRevealed);\n        }\n      });\n    }\n  });\n};\n","import ecs from \"../state/ecs\";\nimport { addLog } from \"../index\";\nimport { addCacheSet, deleteCacheSet, readCacheSet } from \"../state/cache\";\nimport { grid } from \"../lib/canvas\";\nimport { Move } from \"../state/components\";\n\nconst movableEntities = ecs.createQuery({\n  all: [Move],\n});\n\nconst attack = (entity, target) => {\n  const damage = entity.power.current - target.defense.current;\n  target.fireEvent(\"take-damage\", { amount: damage });\n\n  if (target.health.current <= 0) {\n    return addLog(\n      `${entity.description.name} kicked a ${target.description.name} for ${damage} damage and killed it!`\n    );\n  }\n\n  addLog(\n    `${entity.description.name} kicked a ${target.description.name} for ${damage} damage!`\n  );\n};\n\nexport const movement = () => {\n  movableEntities.get().forEach((entity) => {\n    if (entity.has(\"Paralyzed\")) {\n      return entity.remove(Move);\n    }\n\n    let mx = entity.move.x;\n    let my = entity.move.y;\n    let mz = entity.move.z;\n\n    if (entity.move.relative) {\n      mx = entity.position.x + entity.move.x;\n      my = entity.position.y + entity.move.y;\n    }\n\n    // this is where we will run any checks to see if entity can move to new location\n    // observe map boundaries\n    mx = Math.min(grid.map.width + grid.map.x - 1, Math.max(21, mx));\n    my = Math.min(grid.map.height + grid.map.y - 1, Math.max(3, my));\n\n    // check for blockers\n    const blockers = [];\n    // read from cache\n    const entitiesAtLoc = readCacheSet(\n      \"entitiesAtLocation\",\n      `${mx},${my},${mz}`\n    );\n\n    for (const eId of entitiesAtLoc) {\n      if (ecs.getEntity(eId).isBlocking) {\n        blockers.push(eId);\n      }\n    }\n    if (blockers.length) {\n      blockers.forEach((eId) => {\n        const target = ecs.getEntity(eId);\n        if (target.has(\"Health\") && target.has(\"Defense\")) {\n          attack(entity, target);\n        } else {\n          addLog(\n            `${entity.description.name} bump into a ${target.description.name}`\n          );\n        }\n      });\n\n      entity.remove(Move);\n      return;\n    }\n\n    entity.remove(\"Position\");\n    entity.add(\"Position\", { x: mx, y: my, z: mz });\n\n    entity.remove(Move);\n  });\n};\n","import { some, throttle } from \"lodash\";\nimport ecs from \"../state/ecs\";\nimport {\n  Appearance,\n  IsInFov,\n  IsRevealed,\n  Position,\n  Layer100,\n  Layer300,\n  Layer400,\n} from \"../state/components\";\nimport {\n  clearCanvas,\n  drawCell,\n  drawRect,\n  drawText,\n  grid,\n  pxToCell,\n} from \"../lib/canvas\";\nimport { toLocId } from \"../lib/grid\";\nimport { readCache, readCacheSet } from \"../state/cache\";\nimport { gameState, messageLog, selectedInventoryIndex } from \"../index\";\n\nconst layer100Entities = ecs.createQuery({\n  all: [Position, Appearance, Layer100],\n  any: [IsInFov, IsRevealed],\n});\n\nconst layer300Entities = ecs.createQuery({\n  all: [Position, Appearance, Layer300],\n  any: [IsInFov, IsRevealed],\n});\n\nconst layer400Entities = ecs.createQuery({\n  all: [Position, Appearance, Layer400, IsInFov],\n});\n\nconst clearMap = () => {\n  clearCanvas(grid.map.x - 1, grid.map.y, grid.map.width + 1, grid.map.height);\n};\n\nconst renderMap = () => {\n  clearMap();\n\n  layer100Entities.get().forEach((entity) => {\n    if (entity.position.z !== readCache(\"z\")) return;\n\n    if (entity.isInFov) {\n      drawCell(entity);\n    } else {\n      drawCell(entity, { color: \"#333\" });\n    }\n  });\n\n  layer300Entities.get().forEach((entity) => {\n    if (entity.position.z !== readCache(\"z\")) return;\n\n    if (entity.isInFov) {\n      drawCell(entity);\n    } else {\n      drawCell(entity, { color: \"#333\" });\n    }\n  });\n\n  layer400Entities.get().forEach((entity) => {\n    if (entity.position.z !== readCache(\"z\")) return;\n\n    if (entity.isInFov) {\n      drawCell(entity);\n    } else {\n      drawCell(entity, { color: \"#100\" });\n    }\n  });\n};\n\nconst clearPlayerHud = () => {\n  clearCanvas(\n    grid.playerHud.x,\n    grid.playerHud.y,\n    grid.playerHud.width + 1,\n    grid.playerHud.height\n  );\n};\n\nconst renderPlayerHud = (player) => {\n  clearPlayerHud();\n\n  drawText({\n    text: `${player.appearance.char} ${player.description.name}`,\n    background: `${player.appearance.background}`,\n    color: `${player.appearance.color}`,\n    x: grid.playerHud.x,\n    y: grid.playerHud.y,\n  });\n\n  drawText({\n    text: \"♥\".repeat(grid.playerHud.width),\n    background: \"black\",\n    color: \"#333\",\n    x: grid.playerHud.x,\n    y: grid.playerHud.y + 1,\n  });\n\n  const hp = player.health.current / player.health.max;\n\n  if (hp > 0) {\n    drawText({\n      text: \"♥\".repeat(hp * grid.playerHud.width),\n      background: \"black\",\n      color: \"red\",\n      x: grid.playerHud.x,\n      y: grid.playerHud.y + 1,\n    });\n  }\n\n  drawText({\n    text: `Depth: ${Math.abs(readCache(\"z\"))}`,\n    background: \"black\",\n    color: \"#666\",\n    x: grid.playerHud.x,\n    y: grid.playerHud.y + 2,\n  });\n};\n\nconst clearMessageLog = () => {\n  clearCanvas(\n    grid.messageLog.x,\n    grid.messageLog.y,\n    grid.messageLog.width + 1,\n    grid.messageLog.height\n  );\n};\n\nconst renderMessageLog = () => {\n  clearMessageLog();\n\n  drawText({\n    text: messageLog[2],\n    background: \"#000\",\n    color: \"#666\",\n    x: grid.messageLog.x,\n    y: grid.messageLog.y,\n  });\n\n  drawText({\n    text: messageLog[1],\n    background: \"#000\",\n    color: \"#aaa\",\n    x: grid.messageLog.x,\n    y: grid.messageLog.y + 1,\n  });\n\n  drawText({\n    text: messageLog[0],\n    background: \"#000\",\n    color: \"#fff\",\n    x: grid.messageLog.x,\n    y: grid.messageLog.y + 2,\n  });\n};\n\nconst clearInfoBar = () => {\n  drawText({\n    text: ` `.repeat(grid.infoBar.width),\n    x: grid.infoBar.x,\n    y: grid.infoBar.y,\n    background: \"black\",\n  });\n};\n\nconst renderInfoBar = (mPos) => {\n  clearInfoBar();\n\n  const { x, y, z } = mPos;\n  const locId = toLocId({ x, y, z });\n\n  const esAtLoc = readCacheSet(\"entitiesAtLocation\", locId) || [];\n  const entitiesAtLoc = [...esAtLoc];\n\n  clearInfoBar();\n\n  if (entitiesAtLoc) {\n    if (some(entitiesAtLoc, (eId) => ecs.getEntity(eId).isRevealed)) {\n      drawCell({\n        appearance: {\n          char: \"\",\n          background: \"rgba(255, 255, 255, 0.5)\",\n        },\n        position: { x, y, z },\n      });\n    }\n\n    entitiesAtLoc\n      .filter((eId) => {\n        const entity = ecs.getEntity(eId);\n        return (\n          layer100Entities.isMatch(entity) ||\n          layer300Entities.isMatch(entity) ||\n          layer400Entities.isMatch(entity)\n        );\n      })\n      .forEach((eId) => {\n        const entity = ecs.getEntity(eId);\n        clearInfoBar();\n\n        if (entity.isInFov) {\n          drawText({\n            text: `You see a ${entity.description.name}(${entity.appearance.char}) here.`,\n            x: grid.infoBar.x,\n            y: grid.infoBar.y,\n            color: \"white\",\n            background: \"black\",\n          });\n        } else {\n          drawText({\n            text: `You remember seeing a ${entity.description.name}(${entity.appearance.char}) here.`,\n            x: grid.infoBar.x,\n            y: grid.infoBar.y,\n            color: \"white\",\n            background: \"black\",\n          });\n        }\n      });\n  }\n};\n\nconst renderTargeting = (mPos) => {\n  const { x, y, z } = mPos;\n  const locId = toLocId({ x, y, z });\n\n  const esAtLoc = readCacheSet(\"entitiesAtLocation\", locId) || [];\n  const entitiesAtLoc = [...esAtLoc];\n\n  clearInfoBar();\n\n  if (entitiesAtLoc) {\n    if (some(entitiesAtLoc, (eId) => ecs.getEntity(eId).isRevealed)) {\n      drawCell({\n        appearance: {\n          char: \"\",\n          background: \"rgba(74, 232, 218, 0.5)\",\n        },\n        position: { x, y, z },\n      });\n    }\n  }\n};\n\nconst renderInventory = (player) => {\n  clearInfoBar();\n  // translucent to obscure the game map\n  drawRect(0, 0, grid.width, grid.height, \"rgba(0,0,0,0.65)\");\n\n  drawText({\n    text: \"INVENTORY\",\n    background: \"black\",\n    color: \"white\",\n    x: grid.inventory.x,\n    y: grid.inventory.y,\n  });\n\n  drawText({\n    text: \"(c)Consume (d)Drop\",\n    background: \"black\",\n    color: \"#666\",\n    x: grid.inventory.x,\n    y: grid.inventory.y + 1,\n  });\n\n  if (player.inventory.list.length) {\n    player.inventory.list.forEach((entity, idx) => {\n      drawText({\n        text: `${idx === selectedInventoryIndex ? \"*\" : \" \"}${\n          entity.description.name\n        }`,\n        background: \"black\",\n        color: \"white\",\n        x: grid.inventory.x,\n        y: grid.inventory.y + 3 + idx,\n      });\n    });\n  } else {\n    drawText({\n      text: \"-empty-\",\n      background: \"black\",\n      color: \"#666\",\n      x: grid.inventory.x,\n      y: grid.inventory.y + 3,\n    });\n  }\n};\n\nconst renderMenu = () => {\n  drawText({\n    text: `(i)Inventory (g)Pickup (arrow keys)Move/Attack (mouse)Look/Target (<)Stairs Up (>)Stairs Down`,\n    background: \"#000\",\n    color: \"#666\",\n    x: grid.menu.x,\n    y: grid.menu.y,\n  });\n\n  drawText({\n    text: `(n)New (s)Save (l)Load`,\n    background: \"#000\",\n    color: \"#666\",\n    x: grid.menu.x,\n    y: grid.menu.y + 1,\n  });\n};\n\nexport const render = (player) => {\n  renderMap();\n  renderPlayerHud(player);\n  renderMessageLog();\n  renderMenu();\n\n  if (gameState === \"INVENTORY\") {\n    renderInventory(player);\n  }\n};\n\nconst canvas = document.querySelector(\"#canvas\");\ncanvas.onmousemove = throttle((e) => {\n  if (gameState === \"GAME\") {\n    const [x, y] = pxToCell(e);\n    renderMap();\n    renderInfoBar({ x, y, z: readCache(\"z\") });\n  }\n\n  if (gameState === \"TARGETING\") {\n    const [x, y] = pxToCell(e);\n    renderMap();\n    renderInfoBar({ x, y, z: readCache(\"z\") });\n  }\n}, 50);\n","import ecs from \"../state/ecs\";\nimport { addLog } from \"../index\";\nimport { readCacheSet } from \"../state/cache\";\n\nimport { Target, TargetingItem } from \"../state/components\";\n\nconst targetingEntities = ecs.createQuery({\n  all: [Target, TargetingItem],\n});\n\nexport const targeting = () => {\n  targetingEntities.get().forEach((entity) => {\n    const { item } = entity.targetingItem;\n\n    if (item && item.has(\"Effects\")) {\n      entity.target.forEach((t) => {\n        const targets = readCacheSet(\"entitiesAtLocation\", t.locId);\n\n        targets.forEach((eId) => {\n          const target = ecs.getEntity(eId);\n          if (target.isInFov) {\n            item\n              .get(\"Effects\")\n              .forEach((x) =>\n                target.add(\"ActiveEffects\", { ...x.serialize() })\n              );\n          }\n        });\n      });\n\n      entity.remove(\"Target\");\n      entity.remove(\"TargetingItem\");\n\n      addLog(`You use a ${item.description.name}`);\n\n      item.destroy();\n    }\n  });\n};\n","import { get, sample, times } from \"lodash\";\nimport \"./lib/canvas.js\";\nimport { grid, pxToCell } from \"./lib/canvas\";\nimport { toCell, toLocId, circle } from \"./lib/grid\";\nimport {\n  addCache,\n  clearCache,\n  deserializeCache,\n  readCache,\n  readCacheSet,\n  serializeCache,\n} from \"./state/cache\";\nimport { createDungeon } from \"./lib/dungeon\";\nimport { ai } from \"./systems/ai\";\nimport { animation } from \"./systems/animation\";\nimport { effects } from \"./systems/effects\";\nimport { fov } from \"./systems/fov\";\nimport { movement } from \"./systems/movement\";\nimport { render } from \"./systems/render\";\nimport { targeting } from \"./systems/targeting\";\nimport ecs from \"./state/ecs\";\nimport { IsInFov, Move, Position, Ai } from \"./state/components\";\n\nexport let messageLog = [\"\", \"Welcome to Gobs 'O Goblins!\", \"\"];\nexport const addLog = (text) => {\n  messageLog.unshift(text);\n};\n\nconst saveGame = () => {\n  const gameSaveData = {\n    ecs: ecs.serialize(),\n    cache: serializeCache(),\n    playerId: player.id,\n    messageLog,\n  };\n  localStorage.setItem(\"gameSaveData\", JSON.stringify(gameSaveData));\n  addLog(\"Game saved\");\n};\n\nconst loadGame = () => {\n  const data = JSON.parse(localStorage.getItem(\"gameSaveData\"));\n  if (!data) {\n    addLog(\"Failed to load - no saved games found\");\n    return;\n  }\n\n  for (let entity of ecs.entities.all) {\n    entity.destroy();\n  }\n  clearCache();\n\n  ecs.deserialize(data.ecs);\n  deserializeCache(data.cache);\n\n  player = ecs.getEntity(data.playerId);\n\n  userInput = null;\n  playerTurn = true;\n  gameState = \"GAME\";\n  selectedInventoryIndex = 0;\n\n  messageLog = data.messageLog;\n  addLog(\"Game loaded\");\n};\n\nconst newGame = () => {\n  for (let item of ecs.entities.all) {\n    item.destroy();\n  }\n  clearCache();\n\n  userInput = null;\n  playerTurn = true;\n  gameState = \"GAME\";\n  selectedInventoryIndex = 0;\n\n  messageLog = [\"\", \"Welcome to Gobs 'O Goblins!\", \"\"];\n\n  initGame();\n};\n\nconst enemiesInFOV = ecs.createQuery({ all: [IsInFov, Ai] });\n\nconst createDungeonLevel = ({\n  createStairsUp = true,\n  createStairsDown = true,\n} = {}) => {\n  const dungeon = createDungeon({\n    x: grid.map.x,\n    y: grid.map.y,\n    z: readCache(\"z\"),\n    width: grid.map.width,\n    height: grid.map.height,\n  });\n\n  const openTiles = Object.values(dungeon.tiles).filter(\n    (x) => x.sprite === \"FLOOR\"\n  );\n\n  times(5, () => {\n    const tile = sample(openTiles);\n    ecs.createPrefab(\"Goblin\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    ecs.createPrefab(\"HealthPotion\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    ecs.createPrefab(\"ScrollLightning\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    ecs.createPrefab(\"ScrollParalyze\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    ecs.createPrefab(\"ScrollFireball\").add(Position, tile);\n  });\n\n  let stairsUp, stairsDown;\n\n  if (createStairsUp) {\n    times(1, () => {\n      const tile = sample(openTiles);\n      stairsUp = ecs.createPrefab(\"StairsUp\");\n      stairsUp.add(Position, tile);\n    });\n  }\n\n  if (createStairsDown) {\n    times(1, () => {\n      const tile = sample(openTiles);\n      stairsDown = ecs.createPrefab(\"StairsDown\");\n      stairsDown.add(Position, tile);\n    });\n  }\n\n  return { dungeon, stairsUp, stairsDown };\n};\n\nconst goToDungeonLevel = (level) => {\n  const goingUp = readCache(\"z\") < level;\n  const floor = readCache(\"floors\")[level];\n\n  if (floor) {\n    addCache(\"z\", level);\n    player.remove(Position);\n    if (goingUp) {\n      player.add(Position, toCell(floor.stairsDown));\n    } else {\n      player.add(Position, toCell(floor.stairsUp));\n    }\n  } else {\n    addCache(\"z\", level);\n    const { stairsUp, stairsDown } = createDungeonLevel();\n\n    addCache(`floors.${level}`, {\n      stairsUp: toLocId(stairsUp.position),\n      stairsDown: toLocId(stairsDown.position),\n    });\n\n    player.remove(Position);\n\n    if (goingUp) {\n      player.add(Position, toCell(stairsDown.position));\n    } else {\n      player.add(Position, toCell(stairsUp.position));\n    }\n  }\n\n  fov(player);\n  render(player);\n};\n\nconst initGame = () => {\n  const { stairsDown } = createDungeonLevel({ createStairsUp: false });\n\n  player = ecs.createPrefab(\"Player\");\n\n  addCache(`floors.${-1}`, {\n    stairsDown: toLocId(stairsDown.position),\n  });\n\n  player.add(Position, stairsDown.position);\n\n  fov(player);\n  render(player);\n};\n\nlet player = {};\nlet userInput = null;\nlet playerTurn = true;\nexport let gameState = \"GAME\";\nexport let selectedInventoryIndex = 0;\n\ninitGame();\n\ndocument.addEventListener(\"keydown\", (ev) => {\n  if (ev.key !== \"Shift\") {\n    userInput = ev.key;\n  }\n});\n\nconst processUserInput = () => {\n  if (userInput === \"l\") {\n    loadGame();\n  }\n\n  if (userInput === \"n\") {\n    newGame();\n  }\n\n  if (userInput === \"s\") {\n    saveGame();\n  }\n\n  if (gameState === \"GAME\") {\n    if (userInput === \">\") {\n      if (\n        toLocId(player.position) ==\n        readCache(`floors.${readCache(\"z\")}.stairsDown`)\n      ) {\n        addLog(\"You descend deeper into the dungeon\");\n        goToDungeonLevel(readCache(\"z\") - 1);\n      } else {\n        addLog(\"There are no stairs to descend\");\n      }\n    }\n\n    if (userInput === \"<\") {\n      if (\n        toLocId(player.position) ==\n        readCache(`floors.${readCache(\"z\")}.stairsUp`)\n      ) {\n        addLog(\"You climb from the depths of the dungeon\");\n        goToDungeonLevel(readCache(\"z\") + 1);\n      } else {\n        addLog(\"There are no stairs to climb\");\n      }\n    }\n\n    if (userInput === \"ArrowUp\") {\n      player.add(Move, { x: 0, y: -1, z: readCache(\"z\") });\n    }\n    if (userInput === \"ArrowRight\") {\n      player.add(Move, { x: 1, y: 0, z: readCache(\"z\") });\n    }\n    if (userInput === \"ArrowDown\") {\n      player.add(Move, { x: 0, y: 1, z: readCache(\"z\") });\n    }\n    if (userInput === \"ArrowLeft\") {\n      player.add(Move, { x: -1, y: 0, z: readCache(\"z\") });\n    }\n    if (userInput === \"g\") {\n      let pickupFound = false;\n      readCacheSet(\"entitiesAtLocation\", toLocId(player.position)).forEach(\n        (eId) => {\n          const entity = ecs.getEntity(eId);\n          if (entity.isPickup) {\n            pickupFound = true;\n            player.fireEvent(\"pick-up\", entity);\n            addLog(`You pickup a ${entity.description.name}`);\n          }\n        }\n      );\n      if (!pickupFound) {\n        addLog(\"There is nothing to pick up here\");\n      }\n    }\n    if (userInput === \"i\") {\n      gameState = \"INVENTORY\";\n    }\n\n    if (userInput === \"z\") {\n      gameState = \"TARGETING\";\n    }\n\n    userInput = null;\n  }\n\n  if (gameState === \"TARGETING\") {\n    if (userInput === \"z\" || userInput === \"Escape\") {\n      gameState = \"GAME\";\n    }\n\n    userInput = null;\n  }\n\n  if (gameState === \"INVENTORY\") {\n    if (userInput === \"i\" || userInput === \"Escape\") {\n      gameState = \"GAME\";\n    }\n\n    if (userInput === \"ArrowUp\") {\n      selectedInventoryIndex -= 1;\n      if (selectedInventoryIndex < 0) selectedInventoryIndex = 0;\n    }\n\n    if (userInput === \"ArrowDown\") {\n      selectedInventoryIndex += 1;\n      if (selectedInventoryIndex > player.inventory.list.length - 1)\n        selectedInventoryIndex = player.inventory.list.length - 1;\n    }\n\n    if (userInput === \"d\") {\n      if (player.inventory.list.length) {\n        addLog(`You drop a ${player.inventory.list[0].description.name}`);\n        player.fireEvent(\"drop\", player.inventory.list[0]);\n      }\n    }\n\n    if (userInput === \"c\") {\n      const entity = player.inventory.list[selectedInventoryIndex];\n\n      if (entity) {\n        if (entity.requiresTarget) {\n          if (entity.requiresTarget.acquired === \"RANDOM\") {\n            // get a target that is NOT the player\n            const target = sample([...enemiesInFOV.get()]);\n\n            if (target) {\n              player.add(\"TargetingItem\", { item: entity });\n              player.add(\"Target\", { locId: toLocId(target.position) });\n            } else {\n              addLog(`The scroll disintegrates uselessly in your hand`);\n              entity.destroy();\n            }\n          }\n\n          if (entity.requiresTarget.acquired === \"MANUAL\") {\n            player.add(\"TargetingItem\", { item: entity });\n            gameState = \"TARGETING\";\n            return;\n          }\n        } else if (entity.has(\"Effects\")) {\n          // clone all effects and add to self\n          entity\n            .get(\"Effects\")\n            .forEach((x) => player.add(\"ActiveEffects\", { ...x.serialize() }));\n\n          addLog(`You consume a ${entity.description.name}`);\n          entity.destroy();\n        }\n\n        if (selectedInventoryIndex > player.inventory.list.length - 1)\n          selectedInventoryIndex = player.inventory.list.length - 1;\n\n        gameState = \"GAME\";\n      }\n    }\n\n    userInput = null;\n  }\n};\n\nconst update = () => {\n  animation();\n\n  if (player.isDead) {\n    if (gameState !== \"GAMEOVER\") {\n      addLog(\"You are dead.\");\n      render(player);\n    }\n    gameState = \"GAMEOVER\";\n    processUserInput();\n    return;\n  }\n\n  if (playerTurn && userInput && gameState === \"TARGETING\") {\n    processUserInput();\n    render(player);\n    playerTurn = true;\n  }\n\n  if (playerTurn && userInput && gameState === \"INVENTORY\") {\n    processUserInput();\n    targeting();\n    effects();\n    render(player);\n    playerTurn = true;\n  }\n\n  if (playerTurn && userInput && gameState === \"GAME\") {\n    processUserInput();\n    effects();\n    movement();\n    fov(player);\n    render(player);\n\n    if (gameState === \"GAME\") {\n      playerTurn = false;\n    }\n  }\n\n  if (!playerTurn) {\n    ai(player);\n    effects();\n    movement();\n    fov(player);\n    render(player);\n\n    playerTurn = true;\n  }\n};\n\nconst gameLoop = () => {\n  update();\n  requestAnimationFrame(gameLoop);\n};\n\nrequestAnimationFrame(gameLoop);\n\nconst canvas = document.querySelector(\"#canvas\");\n\ncanvas.onclick = (e) => {\n  const [x, y] = pxToCell(e);\n  const locId = toLocId({ x, y, z: readCache(\"z\") });\n\n  readCacheSet(\"entitiesAtLocation\", locId).forEach((eId) => {\n    const entity = ecs.getEntity(eId);\n\n    // Only do this during development\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\n        `${get(entity, \"appearance.char\", \"?\")} ${get(\n          entity,\n          \"description.name\",\n          \"?\"\n        )}`,\n        entity.serialize()\n      );\n    }\n\n    if (gameState === \"TARGETING\") {\n      const entity = player.inventory.list[selectedInventoryIndex];\n      if (entity.requiresTarget.aoeRange) {\n        const targets = circle({ x, y }, entity.requiresTarget.aoeRange).map(\n          (locId) => `${locId},${readCache(\"z\")}`\n        );\n        targets.forEach((locId) => player.add(\"Target\", { locId }));\n      } else {\n        player.add(\"Target\", { locId });\n      }\n\n      gameState = \"GAME\";\n      targeting();\n      effects();\n      render(player);\n    }\n  });\n};\n"],"sourceRoot":""}